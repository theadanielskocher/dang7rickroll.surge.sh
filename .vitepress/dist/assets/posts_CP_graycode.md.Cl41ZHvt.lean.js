import{_ as a,c as s,a0 as n,o as t}from"./chunks/framework.D84hx5uF.js";const c=JSON.parse('{"title":"Gray Code","description":"","frontmatter":{"head":[["link",{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.5.1/katex.min.css"}]]},"headers":[],"relativePath":"posts/CP/graycode.md","filePath":"posts/CP/graycode.md"}'),h={name:"posts/CP/graycode.md"};function e(l,i,r,p,k,g){return t(),s("div",null,i[0]||(i[0]=[n(`<h1 id="gray-code" tabindex="-1">Gray Code <a class="header-anchor" href="#gray-code" aria-label="Permalink to &quot;Gray Code&quot;">​</a></h1><p>Nguồn: <a href="https://cp-algorithms.com/algebra/gray-code.html" target="_blank" rel="noreferrer">CP-ALGORITHMS</a></p><h2 id="mo-đau" tabindex="-1">Mở đầu <a class="header-anchor" href="#mo-đau" aria-label="Permalink to &quot;Mở đầu&quot;">​</a></h2><ul><li>Gray Code - Mã nhị phân phản xạ, được biết tới tên là mã Gray, là một <strong>hệ thống ký số nhị phân</strong> trong đó hai giá trị liên tiếp chỉ khác nhau đúng 1 bit.</li></ul><p>Ví dụ một dãy Gray-code của các số có 3 bit là: $000, 001, 011, 010, 110, 111, 101, 100$. Vì thế $G(4)=6$.</p><p>Mã Gray được phát minh bởi Frank Gray vào năm 1953.</p><h2 id="tim-ma-gray" tabindex="-1">Tìm mã Gray <a class="header-anchor" href="#tim-ma-gray" aria-label="Permalink to &quot;Tìm mã Gray&quot;">​</a></h2><p>Chúng ta hãy nhìn vào các bit của số $n$ và các bit của số $G(n)$. Lưu ý rằng bit thứ $i$ của $G(n)$ bằng $1$ khi và chỉ khi bit thứ $i$ của $n$ bằng $1$ và bit thứ $i+1$ bằng $0$ hoặc ngược lại (bit thứ $i$ bằng $0$ và bit thứ $i+1$ bằng $1$). Vì thế, $G(n)=n\\oplus (n&gt;&gt;1)$:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> g</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="chieu-nguoc-lai" tabindex="-1">Chiều ngược lại <a class="header-anchor" href="#chieu-nguoc-lai" aria-label="Permalink to &quot;Chiều ngược lại&quot;">​</a></h2><p>Cho mã Gray $g$, khôi phục lại số $n$ ban đầu.</p><p>Chúng ta sẽ bắt đầu từ những bit quan trọng nhất đến những bit ít quan trọng nhất (bit ít quan trọng nhất có thứ tự là $1$, bit quan trọng nhất có thứ tự là $k$). Mối quan hệ giữa các bit $n_i$ của số $n$ và các bit $g_i$ của số $g$ là: $n_k = g_k,$</p><p>$n_{k-1} = g_{k-1} \\oplus n_k = g_k \\oplus g_{k-1},$</p><p>$n_{k-2} = g_{k-2} \\oplus n_{k-1} = g_k \\oplus g_{k-1} \\oplus g_{k-2},$</p><p>$n_{k-3} = g_{k-3} \\oplus n_{k-2} = g_k \\oplus g_{k-1} \\oplus g_{k-2} \\oplus g_{k-3},$</p><p>$\\ldots$</p><p>Cách đơn giản nhất để cài đặt là:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rev_g</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> g</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (; g; g </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="ung-dung" tabindex="-1">Ứng dụng <a class="header-anchor" href="#ung-dung" aria-label="Permalink to &quot;Ứng dụng&quot;">​</a></h2><p>Mã Gray có khá nhiều ứng dụng:</p><ul><li>Mã grey của một số $n$ có các bit tạo thành một <a href="https://www.geeksforgeeks.org/hamiltonian-cycle/" target="_blank" rel="noreferrer">chu trình Hamilton</a> trên một <a href="https://en.wikipedia.org/wiki/Hypercube" target="_blank" rel="noreferrer"><strong>siêu khối</strong></a>, mỗi bit tương ứng với một chiều;</li><li>Mã grey được sử dụng để làm giảm thiểu lỗi trong chuyển đổi tín hiệu kỹ thuật số sang tín hiệu tương tự (analog) (ví dụ, trong cảm biến).</li><li>Mã grey còn được sử dụng để giải bài toán Tháp Hà Nội nổi tiếng với cộng đồng học thuật. Link tìm hiểu: <a href="https://en.wikipedia.org/wiki/Tower_of_Hanoi#:~:text=Gray%2Dcode%20solution,-The%20binary%20numeral&amp;text=If%20one%20counts%20in%20Gray,significant%20bit%20is%20the%20largest." target="_blank" rel="noreferrer">Wikipedia</a>;</li><li>Ngoài ra, mã Gray còn được sử dụng trong lý thuyết <a href="https://vi.wikipedia.org/wiki/Gi%E1%BA%A3i_thu%E1%BA%ADt_di_truy%E1%BB%81n#:~:text=Gi%E1%BA%A3i%20thu%E1%BA%ADt%20di%20truy%E1%BB%81n%20l%C3%A0,nhi%C3%AAn%2C%20v%C3%A0%20trao%20%C4%91%E1%BB%95i%20ch%C3%A9o." target="_blank" rel="noreferrer">giải thuật di truyền - Genetic Algorithm</a></li></ul><h2 id="bai-tap-van-dung" tabindex="-1">Bài tập vận dụng <a class="header-anchor" href="#bai-tap-van-dung" aria-label="Permalink to &quot;Bài tập vận dụng&quot;">​</a></h2><ul><li><a href="https://cses.fi/problemset/task/2205" target="_blank" rel="noreferrer">CSES - Gray Code</a></li><li><a href="https://cses.fi/problemset/task/2165" target="_blank" rel="noreferrer">CSES - Tháp Hà Nội</a></li></ul>`,23)]))}const d=a(h,[["render",e]]);export{c as __pageData,d as default};
